(function($) {
	"use strict";
	function getScroll() {
		var e = document.body, t = document.documentElement;
		return {
			left: parseFloat(window.pageXOffset || e.scrollLeft || t.scrollLeft),
			top: parseFloat(window.pageYOffset || e.scrollTop || t.scrollTop)
		};
	}
	
	!function(e) {
		var t, r, i = function(t) {
			return e(t).attr("href");
		}, a = function(e) {
			return null === e && "Null" || e === r && "Undefined" || {}.toString.call(e).slice(8, -1);
		};
		e.fn.idTabs = function() {
			var e = t.args.apply(this, arguments), r = e.update && "update" || e.remove && "remove" || "bind";
			return e.area = this, t[r](e), this;
		}, t = e.idTabs = function(n, o, s) {
			var u, d, l, c = e(), h = e.metadata ? e(n).metadata() : {}, f = {
				tab: t.tab,
				item: t.item
			};
			return f = e.extend(f, t.settings, h, o || {}), f.tabarea = e(n), f.data = s || "idTabs" + +new Date(), 
			e.each({
				selected: ".",
				event: "!",
				start: "#"
			}, function(e, t) {
				"String" == a(f[e]) && 0 == f[e].indexOf(t) && (f[e] = f[e].substr(1));
			}), null === f.start && (f.start = -1), l = [], f.tabs = d = e("a[href^=#]", n), 
			d.each(function() {
				c = f.item(i(this)), c.length && (l = l.concat(c.get()));
			}), f.items = e(l).hide(), u = "idTabs." + f.event, s = f.tabarea.data("idTabs") || {}, 
			s[u] = f, f.tabarea.data("idTabs", s), d.trigger(u).data(f.data, f).bind(u, {
				s: f
			}, function() {
				return t.unbind.apply(this, arguments);
			}).bind(f.event, {
				s: f
			}, t.find), "Number" == a(f.start) && (f.start < 0 || (c = d.eq(f.start)).length) || "String" == a(f.start) && (c = d.filter("a[href=#" + f.start + "]")).length || (c = d.filter("." + f.selected).removeClass(f.selected)).length || f.start === r && (c = d.eq(0)).length, 
			c.length && c.trigger(f.event), f;
		}, t.args = function() {
			for (var t, r = 0, i = {}, n = arguments, o = function(e, t) {
				0 == t.indexOf(".") ? i.selected = t : 0 == t.indexOf("!") ? /^!(true|false)$/i.test(t) ? i.toggle = /^!true$/i.test(t) : i.event = t : 0 == t.indexOf(":") ? (t = t.substr(1).toLowerCase(), 
				0 == t.indexOf("!") ? i[t.substr(1)] = !1 : i[t] = !0) : t && (i.start = t);
			}; r < n.length; ) switch (t = n[r++], a(t)) {
			  case "Object":
				e.extend(i, t);
				break;
	
			  case "Boolean":
				i.change = t;
				break;
	
			  case "Number":
				i.start = t;
				break;
	
			  case "Function":
				i.click = t;
				break;
	
			  case "Null":
				i.start = t;
				break;
	
			  case "String":
				e.each(t.split(/\s+/g), o);
			}
			return i;
		}, t.bind = function(t) {
			if (t) {
				var r = "idTabs" + +new Date();
				t.grouped ? e.idTabs(t.area, t, r) : t.area.each(function() {
					e.idTabs(this, t, r);
				});
			}
		}, t.update = function(r) {
			if (r) {
				r.update = !1;
				var i, a, n, o = r.event;
				return o = 0 == (o + "").indexOf("!") && o.substr(1) || o, o = o ? "idTabs." + o : "", 
				r.area.each(function() {
					if (i = e(this), a = i.data("idTabs")) if (o) n = e.extend({}, a[o], r), t.remove(a[o]), 
					t(n.tabarea, n, n.data); else for (o in a) Object.hasOwnProperty.call(a, o) && (n = e.extend({}, a[o], r), 
					t.remove(a[o]), t(n.tabarea, n, n.data));
				});
			}
		}, t.remove = function(t) {
			if (t) {
				var r, i, a = t.event;
				return a = 0 == (a + "").indexOf("!") && a.substr(1) || a, a = "idTabs" + (a ? "." + a : ""), 
				t.area.each(function() {
					r = e(this).data("idTabs"), delete r["idTabs." + t.event], e(this).data("idTabs", r), 
					i = t.tabs || e("a[href^=#]", this), !i.length && e(this).is("a[href^=#]") && (i = e(this)), 
					i.trigger(a);
				});
			}
		}, t.find = function(r) {
			var a = this, n = !1, o = r.data.s;
			return e("a[href=" + i(this) + "]:first", o.area).each(function() {
				var i = e(this).data(o.data);
				i && (n = t.showtab.call(i.tabarea == o.tabarea ? a : this, i, r) || n);
			}), n;
		}, t.showtab = function(r, a) {
			if (!r || !r.toggle && e(this).is("." + r.selected)) return r && r.change;
			var n = i(this);
			return r.click && 0 == r.click.call(this, n, r, a) ? r.change : (r.toggle && e(this).is("." + r.selected) && (n = null), 
			t.show.call(this, n, r, a));
		}, t.show = function(e, t) {
			return t.tabs.removeClass(t.selected), t.tab(e).addClass(t.selected), t.items.hide(), 
			t.item(e).show(), t.change;
		}, t.unbind = function(t) {
			var r = t.data.s;
			return e(this).removeData(r.data).unbind("idTabs." + r.event), !1;
		}, t.extend = function() {
			var e = arguments;
			return function() {
				[].push.apply(e, arguments), this.idTabs.apply(this, e);
			};
		}, t.tab = function(t) {
			return t ? e("a[href=" + t + "]", this.tabarea) : e([]);
		}, t.item = function(t) {
			if (!t) return e([]);
			var r = e(t);
			return r.length ? r : e("." + t.substr(1));
		}, t.settings = {
			start: r,
			change: !1,
			click: null,
			selected: ".selected",
			event: "!click",
			toggle: !1,
			grouped: !1
		}, t.version = "3.0";
	}(jQuery), jQuery(document).ready(function() {
		jQuery(".imd-tabber-widget").each(function() {
			var e = jQuery(this).find("ul.imd-tabber-header");
			jQuery(this).children("div.imd-st-tab").each(function() {
				var t = jQuery(this).attr("id");
				jQuery(this).find("a.imd-st-title").attr("href", "#" + t).wrap("<li></li>").parent().detach().appendTo(e);
			}), jQuery(this).idTabs();
		});
	}), function() {
		jQuery(document).ready(function() {
			jQuery(".imedica-btn-outline").hover(function() {
				var e = jQuery(this).attr("data-outline-color-text-hover");
				jQuery(this).css({
					color: e
				});
				var t = jQuery(this).attr("data-outline-color-bg-hover");
				jQuery(this).css({
					"background-color": t
				});
			}, function() {
				var e = jQuery(this).attr("data-current-color-text");
				jQuery(this).css({
					color: e
				});
				var t = jQuery(this).attr("data-outline-color-bg");
				jQuery(this).css({
					"background-color": t
				});
			});
		});
	}(), function(e) {
		e.fn.iMedicaCounterBox = function(t) {
			t = e.extend({}, e.fn.iMedicaCounterBox.defaults, t || {});
			var r = Math.ceil(t.speed / t.refreshInterval), i = (t.to - t.from) / r;
			return e(this).each(function() {
				function a() {
					s += i, o++, e(n).html(s.toFixed(t.decimals)), "function" == typeof t.onUpdate && t.onUpdate.call(n, s), 
					o >= r && (clearInterval(u), s = t.to, "function" == typeof t.onComplete && t.onComplete.call(n, s));
				}
				var n = this, o = 0, s = t.from, u = setInterval(a, t.refreshInterval);
			});
		}, e.fn.iMedicaCounterBox.defaults = {
			from: 0,
			to: 1e3,
			speed: 1e3,
			refreshInterval: 100,
			decimals: 0,
			onUpdate: null,
			onComplete: null
		};
	}(jQuery), jQuery(window).load(function() {
		jQuery(".imedica-counter-elements .imedica-counter-value").each(function() {
			var e = jQuery(this).data("from"), t = jQuery(this).data("to");
			jQuery(this).iMedicaCounterBox({
				from: e,
				to: t,
				speed: 1e3,
				refreshInterval: 50,
				onComplete: function() {}
			});
		});
	}), jQuery("document").ready(function() {
		jQuery(".futurebox").hover(function() {
			var e = jQuery(this).find(".icon-box2-title").data("hover");
			jQuery(this).find(".icon-box2-title").css("color", e);
			var t = jQuery(this).find(".aread").data("hover");
			jQuery(this).find(".aread").css("color", t);
			var r = jQuery(this).find("i.icon-box-back2.stop").data("bg-hover");
			jQuery(this).find("i.icon-box-back2.stop").css("background-color", r);
			var i = jQuery(this).find("i.icon-box-back2.stop").data("color-hover");
			jQuery(this).find("i.icon-box-back2.stop").css("color", i);
			var a = jQuery(this).find(".icon-box-3").data("hover");
			jQuery(this).find(".icon-box-3").css("background-color", a);
			var n = jQuery(this).find(".icon-description").data("hover");
			jQuery(this).find(".icon-description").css("color", n);
		}, function() {
			var e = jQuery(this).find(".icon-box2-title").data("color");
			jQuery(this).find(".icon-box2-title").css("color", e);
			var t = jQuery(this).find(".aread").data("color");
			jQuery(this).find(".aread").css("color", t);
			var r = jQuery(this).find(".icon-box-3").data("color");
			jQuery(this).find(".icon-box-3").css("background-color", r);
			var i = jQuery(this).find(".icon-description").data("color");
			jQuery(this).find(".icon-description").css("color", i);
			var a = jQuery(this).find("i.icon-box-back2.stop").data("color");
			jQuery(this).find("i.icon-box-back2.stop").css("color", a);
			var n = jQuery(this).find("i.icon-box-back2.stop").data("bg-color");
			jQuery(this).find("i.icon-box-back2.stop").css("background-color", n);
		});
	}), jQuery("document").ready(function() {
		jQuery(".col-futurebox").hover(function() {
			var e = jQuery(this).find(".service-title").data("hover");
			jQuery(this).find(".service-title").css("color", e);
			var t = jQuery(this).find(".describe").data("hover");
			jQuery(this).find(".describe").css("color", t);
			var r = jQuery(this).find("#btnlink").data("hover");
			jQuery(this).find("#btnlink").css("color", r);
			var i = jQuery(this).data("hover");
			jQuery(this).css("background-color", i);
		}, function() {
			var e = jQuery(this).find(".service-title").data("color");
			jQuery(this).find(".service-title").css("color", e);
			var t = jQuery(this).find(".describe").data("color");
			jQuery(this).find(".describe").css("color", t);
			var r = jQuery(this).find("#btnlink").data("color");
			jQuery(this).find("#btnlink").css("color", r);
			var i = jQuery(this).data("color");
			jQuery(this).css("background-color", i);
		});
	}), 
	jQuery(window).scroll(function() {
		var e = jQuery(".site-header-main").height(), t = getScroll(), r = jQuery(".header-main").outerHeight(), i = jQuery(".header-fixed").outerHeight();
		e < t.top - r ? jQuery(".header-fixed").css("top", "0px") : jQuery(".header-fixed").css("top", "-" + i + "px");
	}), jQuery(window).load(function() {
		var e = "ul.nav-menu li";
		jQuery(e).hover(function() {
			var e = jQuery(this).children("ul").offset();
			if (e) {
				var t = jQuery(window).width() - (e.left + jQuery(this).children("ul").width());
				0 > t && jQuery(this).addClass("left_align");
			}
		});
	}), jQuery(document).ready(function() {
		var e = jQuery(".imd-price-list-element-wrap"), t = jQuery(".imd-price-list-element-wrap .imd-price-list-icon-wrap i"), r = jQuery(e, this).data("hv-color"), i = jQuery(e, this).data("color"), a = jQuery(t).data("icn-clr"), n = jQuery(t).data("icn-hv-clr"), o = jQuery(t).data("icn-bk-clr"), s = jQuery(t).data("icn-bk-hv-clr");
		jQuery(".price_list_name:after").addClass("class_name"), jQuery(e, this).hover(function() {
			jQuery(this).css("color", r), jQuery(this).find("i").css({
				color: n,
				background: s
			});
		}, function() {
			jQuery(this).css("color", i), jQuery(this).find("i").css({
				color: a,
				background: o
			});
		});
	}), function() {
		var e = jQuery("body"), t = jQuery(window), r = jQuery(".imd-mobile-social-menu"),
		navMainMenu = jQuery("#primary-navigation"), navTopMenu = jQuery(".imedica-top-navigation"), 
		headerMain = jQuery(".header-main");
		var i = jQuery(window).width();
		!function() {
			var e, t, a = jQuery("#primary-navigation");
			if (a && (e = a.find(".menu-toggle"))) {
				if (t = a.find(".nav-menu"), !t || !t.children().length) return void e.hide();
				jQuery(".menu-toggle").on("click.fw_theme", function() {
					r.removeClass("top-social-toggled-on"), navTopMenu.removeClass("top-menu-toggled-on"), 
					a.toggleClass("toggled-on"), headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
				}), jQuery(window).resize(function() {
					jQuery(window).width() != i && (headerMain.removeClass("auto-height"), a.removeClass("toggled-on"));
				});
			}
		}(), function() {
			var e, t, a = jQuery(".imedica-top-navigation");
			if (a && (e = a.find(".menu-toggle-top-menu"))) {
				if (t = a.find(".nav-menu"), !t || !t.children().length) return void e.hide();
				jQuery(".menu-toggle-top-menu").on("click.fw_theme", function() {
					r.removeClass("top-social-toggled-on"), navMainMenu.removeClass("toggled-on"), a.toggleClass("top-menu-toggled-on"), 
					headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
				}), jQuery(window).resize(function() {
					jQuery(window).width() != i && (headerMain.removeClass("auto-height"), a.removeClass("top-menu-toggled-on"));
				});
			}
		}(), function() {
			var e, t = jQuery(".imd-mobile-social-menu");
			t && (e = t.find(".menu-toggle-imd-top-social"), e && (jQuery(".menu-toggle-imd-top-social").on("click.fw_theme", function() {
				navTopMenu.removeClass("top-menu-toggled-on"), navMainMenu.removeClass("toggled-on"), 
				t.toggleClass("top-social-toggled-on"), headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
			}), jQuery(window).resize(function() {
				jQuery(window).width() != i && (headerMain.removeClass("auto-height"), t.removeClass("top-social-toggled-on"), 
				i = jQuery(window).width());
			})));
		}(), t.on("hashchange.fw_theme", function() {
			var e = document.getElementById(location.hash.substring(1));
			e && (/^(?:a|select|input|button|textarea)$/i.test(e.tagName) || (e.tabIndex = -1), 
			e.focus(), window.scrollBy(0, -80));
		}), jQuery(function() {
			function e() {
				return window.pageYOffset || document.documentElement.scrollTop;
			}
			function r() {
				if (t.width() >= 781) {
					var r = 80, i = e();
					i >= r ? jQuery("header.site-header").addClass("navbar-fixed-top") : jQuery("header.site-header").removeClass("navbar-fixed-top");
				}
			}
			jQuery(window).resize(function() {
				r();
			}), jQuery(window).scroll(function() {
				r();
			}), jQuery(".primary-navigation, .secondary-navigation").find("a").on("focus.fw_theme blur.fw_theme", function() {
				jQuery(this).parents().toggleClass("focus");
			});
		}), t.load(function() {
			jQuery.isFunction(jQuery.fn.masonry) && jQuery("#footer-sidebar").masonry({
				itemSelector: ".widget",
				columnWidth: function(e) {
					return e / 4;
				},
				gutterWidth: 0,
				isResizable: !0,
				isRTL: jQuery("body").is(".rtl")
			}), e.is(".slider") && jQuery(".featured-content").featuredslider({
				selector: ".featured-content-inner > article",
				controlsContainer: ".featured-content"
			});
		});
	}(jQuery),jQuery("document").ready(function() {
		jQuery(".col-futurebox").hover(function() {
			var e = jQuery(this).find(".service-title").data("hover");
			jQuery(this).find(".service-title").css("color", e);
			var t = jQuery(this).find(".describe").data("hover");
			jQuery(this).find(".describe").css("color", t);
			var r = jQuery(this).find("#btnlink").data("hover");
			jQuery(this).find("#btnlink").css("color", r);
			var i = jQuery(this).data("hover");
			jQuery(this).css("background-color", i);
			var a = jQuery(this).find("#btnlink").data("btnhovercolor");
			jQuery(this).find("#btnlink").css("background-color", a);
			var n = jQuery(this).data("borderhover");
			jQuery(this).css("border-top-color", n);
		}, function() {
			var e = jQuery(this).find(".service-title").data("color");
			jQuery(this).find(".service-title").css("color", e);
			var t = jQuery(this).find(".describe").data("color");
			jQuery(this).find(".describe").css("color", t);
			var r = jQuery(this).find("#btnlink").data("color");
			jQuery(this).find("#btnlink").css("color", r);
			var i = jQuery(this).data("color");
			jQuery(this).css("background-color", i);
			var a = jQuery(this).find("#btnlink").data("btncolor");
			jQuery(this).find("#btnlink").css("background-color", a);
			var n = jQuery(this).data("bordercolor");
			jQuery(this).css("border-top-color", n);
		});
	}), function() {
		var e = jQuery("body"), t = jQuery(window), r = jQuery(".imd-mobile-social-menu"),
		navMainMenu = jQuery("#primary-navigation"), navTopMenu = jQuery(".imedica-top-navigation"), 
		headerMain = jQuery(".header-main"); !function() {
			var e, t, i = jQuery("#primary-navigation");
			if (i && (e = i.find(".menu-toggle"))) {
				if (t = i.find(".nav-menu"), !t || !t.children().length) return void e.hide();
				jQuery(".menu-toggle").on("click.fw_theme", function() {
					r.removeClass("top-social-toggled-on"), navTopMenu.removeClass("top-menu-toggled-on"), 
					i.toggleClass("toggled-on"), headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
				}), jQuery(window).resize(function() {
					headerMain.removeClass("auto-height"), i.removeClass("toggled-on");
				});
			}
		}(), function() {
			var e, t, i = jQuery(".imedica-top-navigation");
			if (i && (e = i.find(".menu-toggle-top-menu"))) {
				if (t = i.find(".nav-menu"), !t || !t.children().length) return void e.hide();
				jQuery(".menu-toggle-top-menu").on("click.fw_theme", function() {
					r.removeClass("top-social-toggled-on"), navMainMenu.removeClass("toggled-on"), i.toggleClass("top-menu-toggled-on"), 
					headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
				}), jQuery(window).resize(function() {
					headerMain.removeClass("auto-height"), i.removeClass("top-menu-toggled-on");
				});
			}
		}(), function() {
			var e, t = jQuery(".imd-mobile-social-menu");
			t && (e = t.find(".menu-toggle-imd-top-social"), e && (jQuery(".menu-toggle-imd-top-social").on("click.fw_theme", function() {
				navTopMenu.removeClass("top-menu-toggled-on"), navMainMenu.removeClass("toggled-on"), 
				t.toggleClass("top-social-toggled-on"), headerMain.hasClass("auto-height") ? headerMain.removeClass("auto-height") : headerMain.addClass("auto-height");
			}), jQuery(window).resize(function() {
				headerMain.removeClass("auto-height"), t.removeClass("top-social-toggled-on");
			})));
		}(), t.on("hashchange.fw_theme", function() {
			var e = document.getElementById(location.hash.substring(1));
			e && (/^(?:a|select|input|button|textarea)$/i.test(e.tagName) || (e.tabIndex = -1), 
			e.focus(), window.scrollBy(0, -80));
		}), jQuery(function() {
			function e() {
				return window.pageYOffset || document.documentElement.scrollTop;
			}
			function r() {
				if (t.width() >= 781) {
					var r = 80, i = e();
					i >= r ? jQuery("header.site-header").addClass("navbar-fixed-top") : jQuery("header.site-header").removeClass("navbar-fixed-top");
				}
			}
			jQuery(window).resize(function() {
				r();
			}), jQuery(window).scroll(function() {
				r();
			}), jQuery(".primary-navigation, .secondary-navigation").find("a").on("focus.fw_theme blur.fw_theme", function() {
				jQuery(this).parents().toggleClass("focus");
			});
		}), t.load(function() {
			jQuery.isFunction(jQuery.fn.masonry) && jQuery("#footer-sidebar").masonry({
				itemSelector: ".widget",
				columnWidth: function(e) {
					return e / 4;
				},
				gutterWidth: 0,
				isResizable: !0,
				isRTL: jQuery("body").is(".rtl")
			}), e.is(".slider") && jQuery(".featured-content").featuredslider({
				selector: ".featured-content-inner > article",
				controlsContainer: ".featured-content"
			});
		});
	}(jQuery), jQuery(document).ready(function() {
		jQuery(".post-like a").click(function() {
			var e = jQuery(this), t = e.data("post_id");
			return jQuery.ajax({
				type: "post",
				url: ajaxurl,
				data: "action=post-like&nonce=" + ajax_nonce + "&imedica_post_like=&post_id=" + t,
				success: function(r) {
					if (-1 !== r.indexOf("already")) {
						var i = r.replace("already", "");
						if (0 == i) var i = "Like";
						e.children(".like").removeClass("pastliked").addClass("disliked").html("<i class='fa fa-heart'></i>"), 
						e.children(".count").removeClass("liked").addClass("disliked").text(i);
					} else jQuery(".postid-" + t).html('<span class="like prevliked"><i class="fa fa-heart"></i></span> <span class="count alreadyliked">' + r + "</span>");
				}
			}), !1;
		});
	}), jQuery(document).ready(function() {
		"undefined" != typeof enable_nicescroll && jQuery("html").niceScroll({
			enablekeyboard: !1
		});
	}), jQuery(document).ready(function() {
		jQuery(".ult-carousel-wrapper").each(function() {
			var e = jQuery(this);
			if (e.hasClass("ult_full_width")) {
				var t = jQuery("html").outerWidth(), r = e.width(), i = (t - r) / 2;
				e.css({
					position: "relative",
					left: "-" + i + "px",
					width: t + "px"
				});
			}
		});
	}), jQuery(window).resize(function() {
		jQuery(".ult-carousel-wrapper").each(function() {
			var e = jQuery(this);
			if (e.hasClass("ult_full_width")) {
				e.removeAttr("style");
				var t = jQuery("html").outerWidth(), r = e.width(), i = (t - r) / 2;
				e.css({
					position: "relative",
					left: "-" + i + "px",
					width: t + "px"
				});
			}
		});
	}), 
	
	jQuery(window).scroll(function() {
		var e = jQuery(".site-header-main").height(), t = getScroll(),
		main_header = jQuery(".header-main").outerHeight(), e < t.top - main_header ? jQuery(".header-fixed").css("top", "0px") : jQuery(".header-fixed").css("top", "-80px");
		}), jQuery(document).ready(function() {
		var e = jQuery("header.site-header-main").outerHeight();
		jQuery(window).scroll(function() {
			jQuery(this).scrollTop() > e + 100 ? jQuery(".imd-scroll-top").fadeIn() : jQuery(".imd-scroll-top").fadeOut();
		}), 
		jQuery(".imd-scroll-top").click(function() {
			return jQuery("html, body").animate({
				scrollTop: 0
			}, 800), !1;
		});
	});

	// Apply lightbox to images
	
	jQuery(document).ready(function() {
		jQuery('#page').find('a.imedica-lightbox').colorbox({
			maxWidth : '80%',
			maxHeight : '90%',
			rel: 'imedica-lightbox',
			opacity : 0.8,
			transition : 'elastic',
			current : ''
		});
	});
})(jQuery);
